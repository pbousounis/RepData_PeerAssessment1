which(activity[is.na(activity$steps), "steps"]
)
activity$steps
if(!file.exists("activity.csv")) {
unzip("activity.zip")}
activity <- read.csv("activity.csv")
dates <- levels(activity$date)
TotalsByDate <- vector("numeric")
for(i in dates) {
TotalsByDate <- c(TotalsByDate,sum(activity[activity$date==i,1]))
}
hist(TotalsByDate, main="Histogram of Total Daily Steps", xlab="Total Daily Steps", breaks=8, col="red")
text(3000, 15, labels=c(paste("Mean=",as.integer(mean(TotalsByDate, na.rm=T)), paste("\nMedian=", as.integer(median(TotalsByDate, na.rm=T))))))
rm(i)
intervals <- unique(activity$interval)
AvesByIntv <- vector("integer")
for(i in intervals) {
AvesByIntv <- c(AvesByIntv, mean(activity[activity$interval==i,1], na.rm=T))
}
plot(intervals, AvesByIntv, type="l", col="red", lwd="1",
main="Average Steps by 5min Interval",
xlab="5min Interval",
ylab="Mean No. Steps (Ave. across all days)")
text(1140, 200, paste("<< Max @", intervals[which(AvesByIntv==max(AvesByIntv))], "min,\n","(", as.integer(max(AvesByIntv)), "steps)"))
rm(i)
activityCP <- activity
print(paste("There are",sum(complete.cases(activity)),"complete observations in the dataset."))
print(paste("There are",sum(!complete.cases(activity)),"rows containing NAs."))
#replace NAs in activity$steps with respective interval means
activityCP <- activity
NAindx <- which(is.na(activity$steps))
IntAves4NArows <- data.frame(intv=unique(activity$interval), mean=AvesByIntv)
df <- data.frame(index=NAindx, intv=activity[is.na(activity$steps),"interval"])
for(i in df$index) {
activityCP[i,1] <- IntAves4NArows[IntAves4NArows$intv==activity[i,"interval"],2]
}
rplTotalsByDate <- vector("numeric")
for(i in dates) {
rplTotalsByDate <- c(rplTotalsByDate,sum(activity[activity$date==i,1]))
}
hist(TotalsByDate, main="Histogram of Total Daily Steps", xlab="Total Daily Steps", breaks=8, col="red")
text(3000, 30, labels=c(paste("Mean=",as.integer(mean(rplTotalsByDate, na.rm=T)), paste("\nMedian=", as.integer(median(rplTotalsByDate, na.rm=T))))))
rm(i)
rm(activityCP)
print(paste("There are",sum(complete.cases(activity)),"complete observations in the dataset."))
print(paste("There are",sum(!complete.cases(activity)),"rows containing NAs."))
#replace NAs in activity$steps with respective interval means
activityCP <- activity
NAindx <- which(is.na(activity$steps))
IntAves4NArows <- data.frame(intv=unique(activity$interval), mean=AvesByIntv)
df <- data.frame(index=NAindx, intv=activity[is.na(activity$steps),"interval"])
for(i in df$index) {
activityCP[i,1] <- IntAves4NArows[IntAves4NArows$intv==activity[i,"interval"],2]
}
rplTotalsByDate <- vector("numeric")
for(i in dates) {
rplTotalsByDate <- c(rplTotalsByDate,sum(activityCP[activityCP$date==i,1]))
}
hist(rplTotalsByDate, main="Histogram of Total Daily Steps", xlab="Total Daily Steps", breaks=8, col="red")
text(3000, 30, labels=c(paste("Mean=",as.integer(mean(rplTotalsByDate, na.rm=T)), paste("\nMedian=", as.integer(median(rplTotalsByDate, na.rm=T))))))
rm(i)
print(paste("There are",sum(complete.cases(activity)),"complete observations in the dataset."))
print(paste("There are",sum(!complete.cases(activity)),"rows containing NAs."))
#replace NAs in activity$steps with respective interval means
activityCP <- activity
NAindx <- which(is.na(activity$steps))
IntAves4NArows <- data.frame(intv=unique(activity$interval), mean=AvesByIntv)
df <- data.frame(index=NAindx, intv=activity[is.na(activity$steps),"interval"])
for(i in df$index) {
activityCP[i,1] <- IntAves4NArows[IntAves4NArows$intv==activity[i,"interval"],2]
}
rplTotalsByDate <- vector("numeric")
for(i in dates) {
rplTotalsByDate <- c(rplTotalsByDate,sum(activityCP[activityCP$date==i,1]))
}
hist(rplTotalsByDate, main="Histogram of Total Daily Steps", xlab="Total Daily Steps", breaks=8, col="red")
text(3000, 30, labels=c(paste("Mean=",as.integer(mean(rplTotalsByDate, na.rm=T)), paste("\nMedian=", as.integer(median(rplTotalsByDate, na.rm=T))))))
rm(i)
?weekday
?weekdays
wkdays <- weekdays(as.Date(dates))
wkdays
?weekdays
wDay <- factor(levels=c("weekday", "weekend"))
?factors
?factor
?factor
?cut
wkendDays <- c("Saturday", "Sunday")
wDay <- factor((weekdays(as.Date(dates)) %in% wkendDays),
levels=c(FALSE, TRUE), labels=c('weekday', 'weekend')
wDay
wDay <- factor((weekdays(as.Date(dates)) %in% wkendDays),
levels=c(FALSE, TRUE), labels=c("weekday", "weekend")
k
wDay
rm(wkendDays, wDays)
rm(wkendDays, wDay)
wDay <- factor(days=="Saturday"|"Sunday", levels=c(FALSE, TRUE), labels=c("Weeday", "Weekend"))
days <- wkdays
wDay <- factor(days=="Saturday"|"Sunday", levels=c(FALSE, TRUE), labels=c("Weeday", "Weekend"))
wDay <- factor(days==("Saturday"|"Sunday"), levels=c(FALSE, TRUE), labels=c("Weeday", "Weekend"))
wDay <- factor(days=="Saturday"|days=="Sunday", levels=c(FALSE, TRUE), labels=c("Weeday", "Weekend"))
wDay
wDay <- factor(days=="Saturday"|days=="Sunday", levels=c(FALSE, TRUE), labels=c("Weekday", "Weekend"))
wDay
str(wDay)
rm(wkdays)
cbind(dates, wDay)
library(lattice)
df
View(df)
wDay
dateDays <- data.frame(dates, wDay
)
dateDays
?transform
View(df)
View(dateDays)
dateDays[dateDays$wDay=="Weekday",1]
for(i in dateDays[dateDays$wDay=="Weekday",1]) {
WeekdayActivity <- activity[activity$date==i,]
}
View(WeekdayActivity)
activity[activity$date==dateDays[dateDays$wDay=="Weekday",dates],]
activity[activity$date==dateDays[dateDays$wDay=="Weekday","dates"],]
actV <- activity
transform(actV, wDays=weekdays(actV$date))
transform(actV, wDays=weekdays(as.Date(actV$date)))
transform(actV, wDays=factor(actV$DayNames=="Saturday"|actV$DayNames=="Sunday", levels=c(FALSE, TRUE), labels=c("Weekday", "Weekend"))
)
transform(actV, wDays=weekdays(as.Date(actV$date)), wkwe=NULL)
transform(actV, wDays=weekdays(as.Date(actV$date)))
transform(actV, wDays=weekdays(as.Date(actV$date)), wkwe=vector("character"))
transform(actV, wDays=weekdays(as.Date(actV$date)), wkwe=vector("character", length=length(actV$date)))
weekendAct <- subset(actV, actV[actV$wDay=="Saturday"|actV$wDay=="Sunday",])
weekendAct <- subset(actV, actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),])
?subset
?"=="
?"|"
weekendAct <- subset(actV, actV[(actV$wDay=="Saturday"||actV$wDay=="Sunday"),])
actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),]
actV[actV$wDay=="Saturday"|actV$wDay=="Sunday",]
actV$wDay=="Saturday"|actV$wDay=="Sunday"
actV$wDay=="Saturday"
View(actV)
View(activityCP)
View(activity)
View(dateDays)
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)), wkwe=vector("character", length=length(actV$date)))
View(actV)
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)))
View(actV)
View(activityCP)
View(actV)
actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),]
WkdayActivity <- actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),]
WkdayActivity <- actV[(actV$wDay!="Saturday"|actV$wDay=="Sunday"),]
WkendActivity <- actV[(actV$wDay!="Saturday"|actV$wDay=="Sunday"),]
WkdayActivity <- actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),]
WkdayActivity <- actV[(actV$wDay!="Saturday"|actV$wDay=="Sunday"),]
WkendActivity <- actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),]
if(!file.exists("activity.csv")) {
unzip("activity.zip")}
activity <- read.csv("activity.csv")
dates <- levels(activity$date)
TotalsByDate <- vector("numeric")
for(i in dates) {
TotalsByDate <- c(TotalsByDate,sum(activity[activity$date==i,1]))
}
hist(TotalsByDate, main="Histogram of Total Daily Steps", xlab="Total Daily Steps", breaks=8, col="red")
text(3000, 15, labels=c(paste("Mean=",as.integer(mean(TotalsByDate, na.rm=T)), paste("\nMedian=", as.integer(median(TotalsByDate, na.rm=T))))))
rm(i)
intervals <- unique(activity$interval)
AvesByIntv <- vector("integer")
for(i in intervals) {
AvesByIntv <- c(AvesByIntv, mean(activity[activity$interval==i,1], na.rm=T))
}
plot(intervals, AvesByIntv, type="l", col="red", lwd="1",
main="Average Steps by 5min Interval",
xlab="5min Interval",
ylab="Mean No. Steps (Ave. across all days)")
text(1140, 200, paste("<< Max @", intervals[which(AvesByIntv==max(AvesByIntv))], "min,\n","(", as.integer(max(AvesByIntv)), "steps)"))
rm(i)
print(paste("There are",sum(complete.cases(activity)),"complete observations in the dataset."))
print(paste("There are",sum(!complete.cases(activity)),"rows containing NAs."))
#replace NAs in activity$steps with respective interval means
activityCP <- activity
NAindx <- which(is.na(activity$steps))
IntAves4NArows <- data.frame(intv=unique(activity$interval), mean=AvesByIntv)
df <- data.frame(index=NAindx, intv=activity[is.na(activity$steps),"interval"])
for(i in df$index) {
activityCP[i,1] <- IntAves4NArows[IntAves4NArows$intv==activity[i,"interval"],2]
}
rplTotalsByDate <- vector("numeric")
for(i in dates) {
rplTotalsByDate <- c(rplTotalsByDate,sum(activityCP[activityCP$date==i,1]))
}
hist(rplTotalsByDate, main="Histogram of Total Daily Steps", xlab="Total Daily Steps", breaks=8, col="red")
text(3000, 30, labels=c(paste("Mean=",as.integer(mean(rplTotalsByDate, na.rm=T)), paste("\nMedian=", as.integer(median(rplTotalsByDate, na.rm=T))))))
rm(i)
days <- weekdays(as.Date(dates))
#wDay <- factor(levels=c("weekday", "weekend"))
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)))
days <- weekdays(as.Date(dates))
#wDay <- factor(levels=c("weekday", "weekend"))
actV <- activity
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)))
WkendActivity <- actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),]
WkdayActivity <- actV[(actV$wDay!="Saturday"|actV$wDay=="Sunday"),]
View(WkdayActivity)
days <- weekdays(as.Date(dates))
#wDay <- factor(levels=c("weekday", "weekend"))
actV <- activity
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)))
WEActivity <- actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),]
WDActivity <- actV[(actV$wDay!="Saturday"|actV$wDay=="Sunday"),]
IntvAvesWE <- vector("integer")
IntvAvesWD <- vector("integer")
for(i in intervals) {
IntvAvesWE <- c(IntvAvesWE, mean(WEActivity[WEActivity$interval==i,1], na.rm=T))
}
for(i in intervals) {
IntvAvesWD <- c(IntvAvesWD, mean(WDActivity[WDActivity$interval==i,1], na.rm=T))
}
library(lattice)
View(WkdayActivity)
IntAvesWE
IntvAvesWE
?xyplot
View(actV)
actV[actV$wDays=="Saturday"|actV$wDays=="Sunday",]
days <- weekdays(as.Date(dates))
#wDay <- factor(levels=c("weekday", "weekend"))
actV <- activity
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)), DayT=NULL)
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)), DayT=NULL)
actV <- activity
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)), DayT=NULL)
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)))
days <- weekdays(as.Date(dates))
#wDay <- factor(levels=c("weekday", "weekend"))
actV <- activity
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)))
actV <- transform(actV, DayT=NULL)
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)), DayT=vector("character"))
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)), DayT=vector("character", length=length(actV$wDays)))
actV[actV$wDays=="Saturday"|actV$wDays=="Sunday",]
actV[actV$wDays=="Saturday"|actV$wDays=="Sunday",actV$DayT] <- "Weekend"
actV[actV$wDays=="Saturday"|actV$wDays=="Sunday",actV$DayT]
for(i in actV$wDays) {
if(i=="Saturday"|i=="Sunday") {
actV[i,DayT] <- "Weekend"
} else {
actV[i,DayT] <- "Weekday"
}
}
for(i in actV$wDays) {
if(i=="Saturday"|i=="Sunday") {
actV[i,"DayT"] <- "Weekend"
} else {
actV[i,"DayT"] <- "Weekday"
}
}
warnings()
View(actV)
for(i in actV$wDays) {
if(i=="Saturday"|i=="Sunday") {
actV[i,"DayT"] <- "Weekend"
} else {
actV[i,"DayT"] <- "Weekday"
}
}
for(i in actV$wDays) {
if(i==c("Saturday","Sunday")) {
actV[i,"DayT"] <- "Weekend"
} else {
actV[i,"DayT"] <- "Weekday"
}
}
for(i in actV$wDays) {print(i)}
for(i in actV$wDays) {
if(i=="Saturday" | i=="Sunday") {
actV[actV$wDays==i,actV$DayT] <- "Weekend"
}
}
WEActivity
WEActivity <- transform(WEActivity, dayT=vector("character", length=length(WEActivity$wDays))
)
View(WEActivity)
WEActivity <- transform(WEActivity, dayT=vector(rep("Weekend",length(WEActivity$wDays)))
)
WEActivity <- transform(WEActivity, dayT=vector("character",rep("Weekend",length(WEActivity$wDays))))
WEActivity <- transform(WEActivity, dayT=vector("character",rep("Weekend",length(WEActivity$wDays)), length=length(WEActivty$wDays)))
WEActivity <- transform(WEActivity, dayT=rep("Weekend", length(actV$wDays))
)
WEActivity <- transform(WEActivity, dayT=rep("Weekend", length(WEActivity$wDays))
)
days <- weekdays(as.Date(dates))
#wDay <- factor(levels=c("weekday", "weekend"))
actV <- activity
WEActivity <- actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),]
WEActivity <- transform(WEActivity, dayT=rep("Weekend", length(WEActivity$wDays)))
WDActivity <- actV[(actV$wDay!="Saturday"|actV$wDay=="Sunday"),]
WDActivity <- transform(WDActivity, dayT=rep("Weekend", length(WDActivity$wDays)))
rActiv <- rbind(WDActivity, WEActivity)
IntvAvesWE <- vector("integer")
IntvAvesWD <- vector("integer")
for(i in intervals) {
IntvAvesWE <- c(IntvAvesWE, mean(WEActivity[WEActivity$interval==i,1], na.rm=T))
}
for(i in intervals) {
IntvAvesWD <- c(IntvAvesWD, mean(WDActivity[WDActivity$interval==i,1], na.rm=T))
}
View(df)
WEActivity <- actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),]
WDActivity <- actV[(actV$wDay!="Saturday"|actV$wDay!="Sunday"),]
WEActivity <- actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),]
if(!file.exists("activity.csv")) {
unzip("activity.zip")}
activity <- read.csv("activity.csv")
dates <- levels(activity$date)
TotalsByDate <- vector("numeric")
for(i in dates) {
TotalsByDate <- c(TotalsByDate,sum(activity[activity$date==i,1]))
}
hist(TotalsByDate, main="Histogram of Total Daily Steps", xlab="Total Daily Steps", breaks=8, col="red")
text(3000, 15, labels=c(paste("Mean=",as.integer(mean(TotalsByDate, na.rm=T)), paste("\nMedian=", as.integer(median(TotalsByDate, na.rm=T))))))
rm(i)
intervals <- unique(activity$interval)
AvesByIntv <- vector("integer")
for(i in intervals) {
AvesByIntv <- c(AvesByIntv, mean(activity[activity$interval==i,1], na.rm=T))
}
plot(intervals, AvesByIntv, type="l", col="red", lwd="1",
main="Average Steps by 5min Interval",
xlab="5min Interval",
ylab="Mean No. Steps (Ave. across all days)")
text(1140, 200, paste("<< Max @", intervals[which(AvesByIntv==max(AvesByIntv))], "min,\n","(", as.integer(max(AvesByIntv)), "steps)"))
rm(i)
print(paste("There are",sum(complete.cases(activity)),"complete observations in the dataset."))
print(paste("There are",sum(!complete.cases(activity)),"rows containing NAs."))
#replace NAs in activity$steps with respective interval means
activityCP <- activity
NAindx <- which(is.na(activity$steps))
IntAves4NArows <- data.frame(intv=unique(activity$interval), mean=AvesByIntv)
df <- data.frame(index=NAindx, intv=activity[is.na(activity$steps),"interval"])
for(i in df$index) {
activityCP[i,1] <- IntAves4NArows[IntAves4NArows$intv==activity[i,"interval"],2]
}
rplTotalsByDate <- vector("numeric")
for(i in dates) {
rplTotalsByDate <- c(rplTotalsByDate,sum(activityCP[activityCP$date==i,1]))
}
hist(rplTotalsByDate, main="Histogram of Total Daily Steps", xlab="Total Daily Steps", breaks=8, col="red")
text(3000, 30, labels=c(paste("Mean=",as.integer(mean(rplTotalsByDate, na.rm=T)), paste("\nMedian=", as.integer(median(rplTotalsByDate, na.rm=T))))))
rm(i)
days <- weekdays(as.Date(dates))
#wDay <- factor(levels=c("weekday", "weekend"))
actV <- activity
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)))
WEActivity <- actV[(actV$wDay=="Saturday"|actV$wDay=="Sunday"),]
WDActivity <- actV[(actV$wDay!="Saturday"|actV$wDay=="Sunday"),]
IntvAvesWE <- vector("integer")
IntvAvesWD <- vector("integer")
for(i in intervals) {
IntvAvesWE <- c(IntvAvesWE, mean(WEActivity[WEActivity$interval==i,1], na.rm=T))
}
for(i in intervals) {
IntvAvesWD <- c(IntvAvesWD, mean(WDActivity[WDActivity$interval==i,1], na.rm=T))
}
?par
library(lattice)
?xyplot
IAE <- data.frame(intervals, IntAvesWE, Type=vector("character", rep("Weekend",288))
)
IAE <- data.frame(intervals, IntvAvesWE, Type=vector("character", rep("Weekend",288)))
IAE <- data.frame(intervals, IntvAvesWE, Type=vector("character", rep("Weekend",length=length(intervals))))
actV
View(actV)
names(actV)
wkends <- which(actV$wDays=="Saturday"|actV$wDays=="Sunday")
wkends
actV[wkends,]
wkends
actV[!wkends,]
View(actV)
actV <- activity
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)), Type=vector("character", length=length(actV$wDays)))
actV <- activity
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)), Type=vector("character", length=length(actV$date)))
wkdays <- which(actV$wDays!="Saturday"|actV$wDays!="Sunday")
actV[-wkends,]
wkdays <- actV[-wkends,]
wkdays <- actV[-wkends]
tmp <- which(actV$wDays=="Saturday"|actV$wDays=="Sunday")
tmp
actV[tmp,Type] <- "Weekend"
actV[tmp,"Type"] <- "Weekend"
actV[tmp,"Type"]
class(actV[tmp,"Type"] )
actV[tmp,as.vector("Type")]
class(actV[tmp,as.vector("Type")])
?factor
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)), Type=factor(c("Weekday", "Weekend")))
?ifelse
actV$Type <- ifelse(actV$wDays %in% c("Saturday", "Sunday"), "weekend", "weekday")
Aves2Intv <- vector("integer")
for(i in intervals) {
IntAves <- c(IntAves, mean(actV[actV$interval==i,1], na.rm=T))
}
IntAves <- vector("integer")
for(i in intervals) {
IntAves <- c(IntAves, mean(actV[actV$interval==i,1], na.rm=T))
}
IntAves <- vector("integer")
for(i in intervals) {
IntAves <- c(IntAves, mean(actV[actV$interval==i & Type=="Weekday",1], na.rm=T))
}
IntAves <- vector("integer")
for(i in intervals) {
IntAves <- c(IntAves, mean(actV[actV$interval==i & "Type"=="Weekday",1], na.rm=T))
}
wd <- actV["Type"=="Weekday",]
View(wd)
wd <- actV[actV$Type=="Weekday",]
actV$Type
wd <- actV[actV$Type=="weekday",]
we <- actV[actV$Type=="weekend",]
View(we)
IntAvesWD <- vector("integer")
for(i in intervals) {
IntAvesWD <- c(IntAvesWD, mean(wd[wd$interval==i,1], na.rm=T))
}
IntAvesWE <- vector("integer")
for(i in intervals) {
IntAvesWE <- c(IntAvesWE, mean(we[we$interval==i,1], na.rm=T))
}
IntAvesWE
tmp <- data.frame(intervals, weekdays=IntAvesWD, weekends=IntAvesWE)
View(tmp)
IntAvesWE <- vector("integer")
for(i in intervals) {
IntAvesWE <- data.frame(c(IntAvesWE, mean(we[we$interval==i,1], na.rm=T)), Day=vector("character", rep("weekend", 288))
}
satsun <- "weekend" x 288
satsun <- "weekend" * 288
satsun <- rep("weekend", 288)
satsun
mwtf <- rep("weekday", 288)
IntAvesD <- cbind(intervals, IntAvesD,sunsat)
IntAvesD <- cbind(intervals, IntAvesWD,sunsat)
IntAvesD <- cbind(intervals, IntAvesWD,satsun)
View(IntAvesD)
IntAvesD <- data.frame(intervals, ave.steps=IntAvesD, day=satsun)
rm(IntAvesD)
rm(IntAvesD)
IntAvesD <- data.frame(intervals, ave.steps=IntAvesD, day=satsun)
IntAvesD <- data.frame(intervals, ave.steps=IntAvesWD, day=satsun)
View(IntAvesD)
IntAvesWE <- vector("integer")
for(i in intervals) {
IntAvesWE <- c(IntAvesWE, mean(we[we$interval==i,1], na.rm=T))
}
IntAvesE <- data.frame(intervals, ave.steps=IntAvesWE, day=mwtf)
View(IntAvesE)
View(IntAvesD)
tmp <- as.data.frame(rbind(IntAvesD,IntAvesE))
tmp
xyplot(ave.steps~intervals|day, data=tmp)
xyplot(ave.steps~intervals|day, data=tmp, type="l")
days <- weekdays(as.Date(dates))
#wDay <- factor(levels=c("weekday", "weekend"))
actV <- activity
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)), Type=vector("character", length=length(actV$date)))
actV$Type <- ifelse(actV$wDays %in% c("Saturday", "Sunday"), "weekend", "weekday")
wd <- actV[actV$Type=="weekday",]
we <- actV[actV$Type=="weekend",]
IntvAvesWE <- vector("integer")
IntvAvesWD <- vector("integer")
for(i in intervals) {
IntvAvesWE <- c(IntvAvesWE, mean(we[we$interval==i,1], na.rm=T))
}
for(i in intervals) {
IntvAvesWD <- c(IntvAvesWD, mean(wd[wd$interval==i,1], na.rm=T))
}
satsun <- rep("weekend", 288)
mwtf <- rep("weekday", 288)
IntAvesD <- data.frame(intervals, ave.steps=IntAvesWD, day=satsun)
IntAvesD <- data.frame(intervals, ave.steps=IntAvesWD, day=satsun)
xyplot(ave.steps~intervals|day, data=tmp, type="l")
days <- weekdays(as.Date(dates))
#wDay <- factor(levels=c("weekday", "weekend"))
actV <- activity
actV <- transform(actV, wDays=weekdays(as.Date(actV$date)), Type=vector("character", length=length(actV$date)))
actV$Type <- ifelse(actV$wDays %in% c("Saturday", "Sunday"), "weekend", "weekday")
wd <- actV[actV$Type=="weekday",]
we <- actV[actV$Type=="weekend",]
IntvAvesWE <- vector("integer")
IntvAvesWD <- vector("integer")
for(i in intervals) {
IntvAvesWE <- c(IntvAvesWE, mean(we[we$interval==i,1], na.rm=T))
}
for(i in intervals) {
IntvAvesWD <- c(IntvAvesWD, mean(wd[wd$interval==i,1], na.rm=T))
}
satsun <- rep("weekend", 288)
mwtf <- rep("weekday", 288)
IntAvesD <- data.frame(intervals, ave.steps=IntAvesWD, day=satsun)
IntAvesD <- data.frame(intervals, ave.steps=IntAvesWD, day=satsun)
xyplot(ave.steps~intervals|day, data=tmp, type="l")
xyplot(ave.steps~intervals|day, data=tmp, type="l", main="Average Steps by Interval,\nAveraged Across All Days")
